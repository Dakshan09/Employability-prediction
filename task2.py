# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oEy2fF1J4Oj3afFExr_vOBmO_xBEdRNz
"""

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from sklearn.model_selection import train_test_split
import numpy as np
import pandas as pd

data = pd.read_csv(r"/content/Student-Employability-Datasets(F).csv")
data.head(10)

def convert(df):
  return int(df == 'Employable')

data['CLASS'] = data['CLASS'].apply(convert)
data.head(5)

X = data[['PHYSICAL CONDITION','SELF-CONFIDENCE','COMMUNICATION SKILLS']]
y = data['CLASS']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = Sequential([
    Dense(16, activation='relu', input_shape=(3,)),
    Dropout(0.2),
    Dense(8, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(X_train, y_train, epochs=50, batch_size=4, validation_data=(X_test, y_test))

loss, accuracy = model.evaluate(X_test, y_test)
print(f"Test Accuracy: {accuracy:.2f}")

new_candidate = np.array([[4, 4, 3]])
prediction = model.predict(new_candidate)
print("Employable" if prediction > 0.5 else "Not Employable")

!pip install gradio

import gradio as gr
import numpy as np


def predict_employability(physical_condition, self_confidence, communication_skills):
    new_candidate = np.array([[physical_condition, self_confidence, communication_skills]])
    prediction = model.predict(new_candidate)
    return "Employable" if prediction > 0.5 else "Not Employable"

iface = gr.Interface(
    fn=predict_employability,
    inputs=[
        gr.Slider(minimum=1, maximum=5, step=1, label="Physical Condition"),
        gr.Slider(minimum=1, maximum=5, step=1, label="Self-Confidence"),
        gr.Slider(minimum=1, maximum=5, step=1, label="Communication Skills")
    ],
    outputs=gr.Textbox(label="Prediction"),
    title="Employability Prediction",
    description="Predict employability based on candidate skills.",
)

iface.launch(share=True)